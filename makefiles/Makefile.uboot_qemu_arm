#
# Copyright (c) 2016, Takashi TOYOSHIMA <toyoshim@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# - Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# - Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# - Neither the name of the authors nor the names of its contributors may be
#   used to endorse or promote products derived from this software with out
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUE
# NTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
#

# Make an u-boot application that can boot on qemu-system-arc -M versatilepb
# $(UBOOT) should point to a checkout of https://github.com/toyoshim/u-boot.
# % sudo qemu-system-arm -M versatilepb -m 256M -nographic \
# > -net nic -net tap -kernel u-boot.bin
# Versatile # tftp 0x0c200000 sdcard.img
# Versatile # tftp 0x0c100000 cpmega88.bin
# Versatile # go 0x0c100000
CC	= arm-none-eabi-gcc
OBJCOPY	= arm-none-eabi-objcopy
LD	= arm-none-eabi-ld.bfd
LIBPATH	= `$(CC) -print-search-dirs | grep '^install' | cut -d ' ' -f 2`
LIBGCC	= `$(CC) -print-libgcc-file-name`
INCS	= -I$(UBOOT)/include -I$(UBOOT)/arch/arm/include -nostdinc \
	  -isystem $(LIBPATH)/include -include $(UBOOT)/include/linux/kconfig.h
DEFS	= -DUBOOT -D__KERNEL__ -D__ARM__ \
	  -DCONFIG_ARM \
	  -DTEST -DTEXT_BASE=0x0c100000 -DSDCARD_IMAGE_BASE=0x0c200000
MFLAGS	= -msoft-float -marm -mno-thumb-interwork -mabi=aapcs-linux \
	  -march=armv5te
FFLAGS	= -ffunction-sections -fdata-sections -ffixed-r9 -ffreestanding \
	  -fstack-usage -fno-common -fno-builtin -fno-stack-protector \
	  -fno-toplevel-reorder
WFLAGS	= -Wall -Wstrict-prototypes -Wno-format-nonliteral -Wno-format-security
CFLAGS	= -g -Os -fsigned-char $(INCS) $(DEFS) $(MFLAGS) $(FFLAGS) $(WFLAGS)
LDFLAGS	= -g -Ttext 0x0c100000
TARGET	= cpmega88
OBJS	= platform_uboot.o machine.o uart_base.o uart_uboot.o sram_base.o \
	  sdcard_base.o sdcard_uboot.o fat.o eeprom_base.o eeprom_image.o \
	  eeprom_uboot.o io_base.o led_base.o cpu_8080.o
UBOOT	= ../third_party/u-boot

all: $(TARGET).srec $(TARGET).bin

$(TARGET).srec: $(TARGET).elf
	$(OBJCOPY) -O srec $< $@

$(TARGET).bin: $(TARGET).elf
	$(OBJCOPY) -O binary $< $@

$(TARGET).elf: $(OBJS) libstubs.o
	$(LD) $(LDFLAGS) -o $@ -e main $(OBJS) libstubs.o $(LIBGCC)

libstubs.o: $(UBOOT)/examples/standalone/stubs.o
	$(LD) -r -o $@ $<

%.o: ../src/%.c
	$(CC) -c $(CFLAGS) -o $@ $<
